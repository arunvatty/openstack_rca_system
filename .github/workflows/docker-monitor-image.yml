name: RCA App CI with Monitoring

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8

      - name: Set up .env file
        run: |
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" > .env
          echo "DATA_DIR=logs" >> .env
          echo "MODELS_DIR=saved_models" >> .env

      - name: Run setup step
        run: python main.py --mode setup

      - name: Run Tests
        run: python test_rca.py

      - name: Train model with dummy logs
        run: |
          mkdir -p logs/sample_logs
          echo "ERROR: Dummy log for CI model training" > logs/sample_logs/test.log
          python main.py --mode train --logs logs/sample_logs

  monitoring-stack:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env for Docker Compose
        run: |
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" > .env
          echo "PROMETHEUS_ENABLED=true" >> .env
          echo "REDIS_URL=redis://redis:6379" >> .env
          echo "METRICS_PORT=8000" >> .env

      - name: Start Docker Compose Monitoring Stack
        run: |
          docker compose -f docker-compose-monitoring.yml up -d --build

      - name: Wait for Prometheus & Grafana
        run: |
          echo "Waiting for Prometheus and Grafana..."
          sleep 30
          curl -f http://localhost:9090 || exit 1
          curl -f http://localhost:3000 || exit 1

      - name: Stop Docker Compose
        run: |
          docker compose -f docker-compose-monitoring.yml down

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/openstack-rca-app:latest
